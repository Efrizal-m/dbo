basePath: /
definitions:
  controllers.tokenResponseWrapper:
    properties:
      token:
        description: 'Example: {"token": "your-token-value"}'
        type: string
    type: object
  interfaces.ErrorResponseWrapper:
    properties:
      error:
        description: 'Example: {"error": "your-error-value"}'
    type: object
  interfaces.SuccessResponseWrapper:
    properties:
      data:
        description: 'Example: {"data": "your-response-data"}'
        type: string
    type: object
  models.Customer:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
    type: object
  models.Order:
    properties:
      amount:
        type: number
      created_at:
        type: integer
      customer_id:
        type: integer
      id:
        type: integer
      status:
        type: string
    type: object
  models.User:
    properties:
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a pet store.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: DBO API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login a user and get a JWT token
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.tokenResponseWrapper'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
      summary: Login a user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with username and password
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
      summary: Register a new user
      tags:
      - auth
  /customers:
    get:
      description: Get all customers with pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Customer'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
      summary: Get all customers
      tags:
      - customers
    post:
      consumes:
      - application/json
      description: Create a new customer with the provided details
      parameters:
      - description: Customer
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Customer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
      summary: Create a new customer
      tags:
      - customers
  /customers/{id}:
    delete:
      description: Delete customer by ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/interfaces.SuccessResponseWrapper'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
      summary: Delete a customer
      tags:
      - customers
    get:
      description: Get customer by ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
      summary: Get a customer
      tags:
      - customers
    put:
      consumes:
      - application/json
      description: Update customer by ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Customer
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
      summary: Update a customer
      tags:
      - customers
  /orders:
    get:
      description: Get all orders with pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
      summary: Get all orders
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: Create a new order with the provided details
      parameters:
      - description: Order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
      summary: Create a new order
      tags:
      - orders
  /orders/{id}:
    delete:
      description: Delete order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/interfaces.SuccessResponseWrapper'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
      summary: Delete an order
      tags:
      - orders
    get:
      description: Get order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
      summary: Get an order
      tags:
      - orders
    put:
      consumes:
      - application/json
      description: Update order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: Order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/interfaces.ErrorResponseWrapper'
      summary: Update an order
      tags:
      - orders
swagger: "2.0"
